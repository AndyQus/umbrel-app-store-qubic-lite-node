# Optimierte nginx.conf für ${APP_DATA_DIR}/edge/nginx.conf
# WebSocket-Upgrade-Helper
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Rate limiting für API-Schutz
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

server {
  listen 8080;
  
  # Erweiterte Timeouts für Peer-Kommunikation
  proxy_connect_timeout       60s;
  proxy_send_timeout          60s;
  proxy_read_timeout          300s;
  send_timeout                60s;
  
  # Erweiterte Buffer-Größen
  proxy_buffers               8 16k;
  proxy_buffer_size           32k;
  
  # Client-Body-Größe für große Peer-Daten
  client_max_body_size        50M;
  
  # ---- Health Check Endpoint ----
  location /health {
    proxy_pass http://qubic-lite-node_core:9090/api/health;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    access_log off;
  }
  
  # ---- Swagger direkt auf Core (/swagger/*) ----
  location /swagger/ {
    proxy_pass http://qubic-lite-node_core:9090/swagger/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 300s;
  }
  
  # ---- API: /api/* → Core:9090 ----
  location /api/ {
    # Rate limiting anwenden
    limit_req zone=api burst=20 nodelay;
    
    proxy_pass http://qubic-lite-node_core:9090;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket-Support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Erweiterte Timeouts für Peer-Operationen
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    
    # Keep-Alive für bessere Performance
    proxy_set_header Connection "keep-alive";
    
    # Cors-Headers für Peer-Communication
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    
    # Preflight für CORS
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }
  }
  
  # ---- Spezielle Peer-API Endpoints (ohne Rate Limiting) ----
  location /api/peers/ {
    proxy_pass http://qubic-lite-node_core:9090;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket-Support für Peer-Communication
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Längere Timeouts für Peer-Discovery
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_connect_timeout 60s;
    
    # Keine Caching für Peer-Status
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
  }
  
  # ---- UI: alles andere ----
  location / {
    proxy_pass http://qubic-lite-node_ui:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket-Support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    proxy_read_timeout 300s;
    
    # Caching für statische Assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
      expires 1d;
      add_header Cache-Control "public, immutable";
    }
  }
  
  # ---- Error Pages ----
  error_page 502 503 504 /error.html;
  location = /error.html {
    return 200 '{"error": "Service temporarily unavailable", "timestamp": "$time_iso8601"}';
    add_header Content-Type application/json;
  }
}